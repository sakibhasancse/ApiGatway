# Define the upstream for authentication service
upstream authUpstream {
    server auth:3000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

# Define the upstream for the product service
upstream productServiceUpstream {
    server product:4000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

server {
    listen 80;
    listen [::]:80;

    # server_name api-gateway.local;

    # Route to product service with authentication check
    location /product/ {
        auth_request /auth/verify/;
        auth_request_set $auth_status $upstream_status;

       # Capture full Base64-encoded user object
        auth_request_set $user_base64 $upstream_http_x_authenticated_user;

        rewrite ^/product/(.*)$ /$1 break;
        # Forward request to the product service
        proxy_pass http://productServiceUpstream;

        proxy_set_header X-Authenticated-User $user_base64;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Internal authentication request to auth service
    location /auth/verify {
        internal;
        rewrite ^/auth/(.*)$ /$1 break;
        proxy_pass http://authUpstream;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
    }

    location /auth/ {
        rewrite ^/auth/(.*)$ /$1 break;
        proxy_pass http://authUpstream;
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
